service: whatsapp
frameworkVersion: '2'
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: manning
  stage: dev
  region: us-east-1
  environment:
    TEMPLATE_TABLE: ${self:custom.tables.templateTable}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:572553955017:table/templatesTable"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:us-east-1:572553955017:table/templatesTable/index/*"
plugins:
  - serverless-dynamodb-local
  - serverless-offline

functions:
  templatesCreate:
    handler: templates/create.handler
    events:
      - http:
          path: /templates
          method: post
    environment:
      TEMPLATE_TABLE: ${self:custom.tables.templateTable}
  templateUpdate:
    handler: templates/edit.handler
    events:
      - http:
          path: /templates/{user_id}/{template_id}
          method: put
    environment:
      TEMPLATE_TABLE: ${self:custom.tables.templateTable}
  templateDelete:
    handler: templates/delete.handler
    events:
      - http:
          path: /templates/{user_id}/{template_id}
          method: delete
    environment:
      TEMPLATE_TABLE: ${self:custom.tables.templateTable}
  templaterDetail:
    handler: templates/detail.handler
    events:
      - http:
          path: /templates/{user_id}/{template_id}
          method: get
    environment:
      TEMPLATE_TABLE: ${self:custom.tables.templateTable}
  templateByUser:
    handler: templates/list.handler
    events:
      - http:
          path: /templates/{user_id}
          method: get


custom:
  dynamodb:
    migration:
      dir: migration
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
  serverless-offline:
    httpPort: 4000
  tables:
    templateTable: templatesTable

resources:
  Resources:
    templateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tables.templateTable}
        BillingMode: PROVISIONED
        AttributeDefinitions:
          - AttributeName: template_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: template_id
            KeyType: RANGE
        ProvisionedThroughput:
           ReadCapacityUnits: 1
           WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: template-id-index
            KeySchema:
              - AttributeName: template_id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: ALL
